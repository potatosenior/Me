{"version":3,"sources":["utils/theme.js","components/MainContent.js","components/Footer.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["theme","light","primary","secondary","third","fourth","dark","styles","container","display","flexDirection","color","width","height","MainContent","props","style","backgroundColor","position","bottom","p","alignSelf","ul","listStyleType","alignItems","justifyContent","li","a","textDecoration","Footer","liStyle","Object","assign","href","h1","textAlign","marginLeft","themeCBLight","borderRadius","top","sliderLight","cursor","left","transition","marginRight","boxShadow","borderBottomRightRadius","Navbar","console","log","for","type","id","opacity","onChange","setTheme","transform","App","useState","themeAtual","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6dabd283.chunk.js","sourcesContent":["const theme = {\r\n  light: {\r\n    primary: \"#0779e4\",\r\n    secondary: \"#4cbbb9\",\r\n    third: \"#77d8d8\",\r\n    fourth: \"#eff3c6\"\r\n  },\r\n  dark: {\r\n    primary: \"#162447\",\r\n    secondary: \"#1f4068\",\r\n    third: \"#1b1b2f\",\r\n    fourth: \"#e43f5a\"\r\n  }\r\n};\r\n\r\nexport default theme;","import React from 'react';\r\n\r\nimport theme from '../utils/theme'\r\n\r\nfunction MainContent(props) {\r\n  return (\r\n    <div style={{...styles.container, backgroundColor: theme[props.theme].secondary}} >\r\n      aaa\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column', \r\n    color: 'white',\r\n    width: '100%',\r\n    height: '200%'\r\n  },\r\n}\r\nexport default MainContent;","import React from 'react';\r\n\r\nimport theme from '../utils/theme'\r\n\r\nfunction Footer(props) {\r\n\r\n  const liStyle = Object.assign({}, styles.li)\r\n  return (\r\n    <div style={{...styles.container, backgroundColor: theme[props.theme].third}} >\r\n      <p style={styles.p} >© MIT</p>\r\n      <ul style={styles.ul} >\r\n        <li style={liStyle} >\r\n          <a style={styles.a} href=\"https://www.github.com/potatosenior\">\r\n            github\r\n          </a>\r\n        </li>\r\n        <li style={liStyle}>\r\n          <a style={styles.a} href=\"https://www.linkedin.com/in/joãopedrovieira/\">\r\n            linkedin\r\n          </a>\r\n        </li>\r\n        <li style={liStyle}>\r\n          <a style={styles.a} href=\"https://play.google.com/store/apps/developer?id=Potatosenior\">\r\n            plasytore\r\n          </a>\r\n        </li>\r\n        <li style={liStyle}>\r\n          <a style={styles.a} href=\"https://api.whatsapp.com/send?phone=5564992432941&text=Olá&source=&data=&app_absent=\">\r\n            contato\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex', \r\n    flexDirection: 'column', \r\n    color: 'white',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    width: '100%'\r\n  },\r\n  p: {\r\n    alignSelf: 'center'\r\n  },\r\n  ul: {\r\n    listStyleType: 'none',\r\n    display: 'flex',\r\n    //backgroundColor: 'green',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around',\r\n  },\r\n  li: {\r\n    display: 'flex',\r\n    height: '80%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    //backgroundColor: 'black',\r\n    //boxShadow: '0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\r\n  },\r\n  a: {\r\n    textDecoration: 'none',\r\n    color: 'white'\r\n  }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport theme from '../utils/theme'\r\n\r\nfunction Navbar(props) {\r\n  console.log(theme)\r\n\r\n  const liStyle = Object.assign({}, styles.li, {backgroundColor: theme[props.theme].secondary})\r\n\r\n  return (\r\n    <div style={{...styles.container, backgroundColor: theme[props.theme].primary}} >\r\n      <h1 style={styles.h1} >Joaozin Empurra Nelas</h1>\r\n      <div \r\n        style={{\r\n          display: 'flex', flexDirection: 'column',\r\n          alignItems: 'center', justifyContent: 'center',\r\n        }} \r\n      >\r\n        <label for=\"changeTheme\" \r\n          style={{...styles.themeCBLight, ...props.theme === 'light' ? {backgroundColor: theme[props.theme].secondary} : {backgroundColor: theme[props.theme].secondary}}} \r\n        >\r\n          <input \r\n            type=\"checkbox\" id=\"changeTheme\" style={{opacity: \"0%\", width: 0, height: 0}} \r\n            onChange={() => props.theme === 'light' ? props.setTheme('dark') : props.setTheme('light')} \r\n          />\r\n          <span style={{...styles.sliderLight, ...props.theme === 'dark' ? {transform: 'translateX(1.5rem)'} : null}} />\r\n        </label>\r\n        <p style={{ position: 'relative', bottom: \"40%\"}} >Mudar para tema {props.theme === 'light' ? 'escuro' : 'claro'}</p>\r\n      </div>\r\n      <ul style={styles.ul} >\r\n        <li style={liStyle} >\r\n          Sobre\r\n        </li>\r\n        <li style={liStyle}>\r\n          Skills\r\n        </li>\r\n        <li style={liStyle}>\r\n          Projetos\r\n        </li>\r\n        <li style={liStyle}>\r\n          Contato\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex', \r\n    flexDirection: 'row', \r\n    backgroundColor: 'blue',\r\n    justifyContent: 'space-between',\r\n    color: 'white'\r\n  },\r\n  h1: {\r\n    textAlign: 'center',\r\n    marginLeft: '4%',\r\n    color: 'white'\r\n  },\r\n  themeCBLight: {\r\n    width: '3.1rem',\r\n    height: '1.6rem',\r\n    color: 'transparent',\r\n    backgroundColor: '#89c12d',\r\n    borderRadius: 20,\r\n    position: 'relative',\r\n    top: '2rem'\r\n  },\r\n  sliderLight: {\r\n    position: 'absolute',\r\n    cursor: 'pointer',\r\n    top: '0.1rem',\r\n    left: '0.1rem',\r\n    backgroundColor: '#fff',\r\n    height: '1.4rem',\r\n    width: '1.4rem',\r\n    borderRadius: 13,\r\n    transition: '.4s',\r\n    '-webkit-transition': '.4s',\r\n  },\r\n  ul: {\r\n    width: '40%', \r\n    listStyleType: 'none',\r\n    display: 'flex',\r\n    //backgroundColor: 'green',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginRight: '2%'\r\n  },\r\n  li: {\r\n    display: 'flex',\r\n    width: '20%', \r\n    height: '80%',\r\n    backgroundColor: 'white',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    boxShadow: '0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    borderRadius: 5,\r\n    borderBottomRightRadius: 20,\r\n    cursor: 'pointer',\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from 'react';\n\nimport './App.css';\nimport theme from './utils/theme';\nimport MainContent from './components/MainContent';\nimport Footer from './components/Footer';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  const [themeAtual, setTheme] = useState('light');\n\n  return (\n    <div style={{backgroundColor: theme[themeAtual].third }} >\n      <Navbar theme={themeAtual} setTheme={setTheme} />\n      <MainContent theme={themeAtual} />\n      <Footer theme={themeAtual} />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}